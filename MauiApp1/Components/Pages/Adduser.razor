@page "/add-user"
@layout Layoutminu
@inject UserService userService
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3 style="text-align:center;">➕ إضافة شخص جديد</h3>

<div style="display:flex; justify-content:center; padding:20px;">
    <div style="width:100%; max-width:500px;">
        <RadzenTemplateForm Data="@newUser" TItem="User" Submit="@AddUser">
            <RadzenTextBox @bind-Value="newUser.name"
                           Placeholder="👤 الاسم"
                           Style="width:100%;" />

            <RadzenTextBox @bind-Value="newUser.password"
                           Placeholder="🔐 كلمة السر"
                           Style="width:100%; margin-top:15px;" />

            <RadzenNumeric TValue="int" @bind-Value="newUser.number"
                           Placeholder="📞 رقم الهاتف"
                           Style="width:100%; margin-top:15px;" />

            @if (adminalll == true)
            {
                <div style="margin-top:10px;">
                    <RadzenCheckBox @bind-Value="selectedUser.adminsampil" />
                    <label style="margin-left:8px;">📌 صلاحية جزئية</label>
                </div>
                <div style="margin-top:10px;">
                    <RadzenCheckBox @bind-Value="selectedUser.adminall" />
                    <label style="margin-left:8px;">🔐 صلاحية كاملة</label>
                </div>
            }

            <RadzenButton Text="💾 حفظ"
                          ButtonType="ButtonType.Submit"
                          Style="width:100%; margin-top:20px; background-color:orange;" />
        </RadzenTemplateForm>

        @if (!string.IsNullOrWhiteSpace(errorMessage))
        {
            <p style="color:red; margin-top:10px;">@errorMessage</p>
        }

        @if (!string.IsNullOrWhiteSpace(successMessage))
        {
            <p style="color:green; margin-top:5px;">@successMessage</p>
        }
    </div>
</div>

@code {
    User newUser = new();
    User selectedUser = new();

    string errorMessage;
    string successMessage;
    bool? adminalll;
    protected override async Task OnInitializedAsync()
    {
        adminalll = await localStorage.GetItemAsync<bool?>("adminall");

        try
        {
            await userService.InitAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"❌ خطأ أثناء التهيئة: {ex.Message}";
        }
    }

    private async Task AddUser()
    {
        errorMessage = string.Empty;
        successMessage = string.Empty;

        if (string.IsNullOrWhiteSpace(newUser.name) ||
            string.IsNullOrWhiteSpace(newUser.password) ||
            newUser.number == 0)
        {
            errorMessage = "⚠️ الرجاء تعبئة جميع الحقول";
            return;
        }

        try
        {
            var exists = await userService.IsPhoneNumberExistsAsync(newUser.number, newUser.password);
            if (exists)
            {
                errorMessage = "⚠️ الرقم أو كلمة السر مستخدمين من قبل";
                return;
            }

            await userService.AddUserAsync1(newUser); 

            successMessage = "✅ تم إضافة المستخدم بنجاح";
            newUser = new(); 
        }
        catch (Exception ex)
        {
            errorMessage = $"❌ فشل في الإضافة: {ex.Message}";
        }
    }
}