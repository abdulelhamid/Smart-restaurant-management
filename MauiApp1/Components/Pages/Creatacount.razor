@page "/creatacount"
@layout Layoutt

@using MauiApp1
@inject UserService userService
@inject NavigationManager navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3 style="text-align:center; margin-top:30px;">➕ انشاء حساب جديد</h3>

<div style="display:flex; justify-content:center; padding:20px;">
    <div style="width:100%; max-width:500px;">
        <RadzenTemplateForm Data="@newUser" TItem="User" Submit="@Register">
            <RadzenTextBox @bind-Value="newUser.name"
                           Placeholder="👤 الاسم الكامل"
                           Style="width:100%;" />

            <RadzenPassword @bind-Value="newUser.password"
                            Placeholder="🔒 كلمة المرور"
                            Style="width:100%; margin-top:15px;" />

            <RadzenNumeric TValue="int" @bind-Value="newUser.number"
                           Placeholder="📞 رقم الهاتف"
                           Style="width:100%; margin-top:15px;" />

            <RadzenButton Text="🔐 تسجيل"
                          ButtonType="ButtonType.Submit"
                          Style="width:100%; margin-top:20px; background-color:orange;" />
        </RadzenTemplateForm>

        @if (!string.IsNullOrEmpty(message))
        {
            <p style="margin-top:15px; color:@(messageColor); text-align:center;">@message</p>
        }
    </div>
</div>

@code {
    User newUser = new();
    string message = string.Empty;
    string messageColor = "red";

    protected override async Task OnInitializedAsync()
    {
        await userService.InitAsync();

        newUser.adminall = false;
        newUser.adminsampil = false;
    }

    async Task Register()
    {
        message = string.Empty;

        if (string.IsNullOrWhiteSpace(newUser.name) ||
            string.IsNullOrWhiteSpace(newUser.password) ||
            newUser.number == 0)
        {
            message = "⚠️ جميع الحقول مطلوبة";
            messageColor = "red";
            return;
        }

        bool isUsed = await userService.IsPhoneNumberExistsAsync(newUser.number, newUser.password);
        if (isUsed)
        {
            message = "⚠️ هذا الرقم أو كلمة السر مستخدمة من قبل";
            messageColor = "red";
            return;
        }

        newUser.adminall = false;
        newUser.adminsampil = false;

        await userService.AddUserAsync1(newUser);

        await localStorage.SetItemAsync("username", newUser.name);
        await localStorage.SetItemAsync("number", newUser.number);
        await localStorage.SetItemAsync("password", newUser.password);
        await localStorage.SetItemAsync("adminsampil", false);
        await localStorage.SetItemAsync("adminall", false);

        message = "✅ تم إنشاء الحساب بنجاح";
        messageColor = "green";

        await Task.Delay(1000); 
        navigation.NavigateTo("/center");
    }
}